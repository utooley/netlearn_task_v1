condition1,condition2imgL.opacity = abs(round(np.sin(20*globalClock.getTime()-onset))),imgR.opacity = abs(round(np.sin(20*globalClock.getTime()-onset)))imgL.size = np.abs(np.sin((globalClock.getTime()-onset))*10),imgR.size = np.abs(np.sin((globalClock.getTime()-onset))*10)"imgL.ori = 15*(np.sin(6*(globalClock.getTime()-onset)));imgL.pos = [-7, np.sin(5*(globalClock.getTime()-onset))]","imgR.ori = 15*(np.sin(6*(globalClock.getTime()-onset)));imgR.pos = [7, np.sin(5*(globalClock.getTime()-onset))]"imgL.opacity = abs(np.sin(3*(globalClock.getTime()-onset))),imgR.opacity = abs(np.sin(3*(globalClock.getTime()-onset)))imgL.opacity = abs(np.sin(3*(globalClock.getTime()-onset))),imgR.opacity = abs(np.sin(3*(globalClock.getTime()-onset)))"imgL.pos = [-7, np.sin((globalClock.getTime()-onset))*3]","imgR.pos = [7, np.sin((globalClock.getTime()-onset))]""imgL.pos = [-7, np.sin(5*(globalClock.getTime()-onset))]","imgR.pos=[4+np.sin((globalClock.getTime()-onset)), np.sin((globalClock.getTime()-onset))*3]""imgL.pos = [-5-np.sin(globalClock.getTime()-onset), np.sin(5*(globalClock.getTime()-onset))]",imgR.ori = 10*(np.sin(10*(globalClock.getTime()-onset)))imgL.ori = 15*(np.sin(6*(globalClock.getTime()-onset))),imgR.ori = 25*(np.sin(4*(globalClock.getTime()-onset)))imgL.ori = 10*(np.sin(10*(globalClock.getTime()-onset))),imgR.ori = 15*(np.sin(6*(globalClock.getTime()-onset)))imgL.ori = 25*(np.sin(4*(globalClock.getTime()-onset))),imgR.ori =50*(globalClock.getTime()-onset)imgL.ori =50*(globalClock.getTime()-onset),"imgR.pos = [7, np.sin(3*(globalClock.getTime()-onset))*2]""imgL.pos = [-7, np.sin(3*(globalClock.getTime()-onset))*2]","imgR.pos = [7, np.sin(5*(globalClock.getTime()-onset))]""imgL.pos = [-7, np.sin(5*(globalClock.getTime()-onset))]","imgR.pos = [7, np.sin(3*(globalClock.getTime()-onset))/3]""imgL.pos = [-7, np.sin(3*(globalClock.getTime()-onset))/3]","imgR.pos = [7, np.sin((globalClock.getTime()-onset))*3]""imgL.pos = [-7, np.sin((globalClock.getTime()-onset))*3]","imgR.pos = [6+np.sin((globalClock.getTime()-onset)), -3+np.sin(3*(globalClock.getTime()-onset))*2]""imgL.pos = [-6-np.sin((globalClock.getTime()-onset)), -3+np.sin(3*(globalClock.getTime()-onset))*2]","imgR.pos = [6+np.sin(5*(globalClock.getTime()-onset)), -3+np.sin(5*(globalClock.getTime()-onset))]""imgL.pos = [-6-np.sin(4*(globalClock.getTime()-onset)), -3+np.sin(5*(globalClock.getTime()-onset))]","imgR.pos = [6+np.sin(3*(globalClock.getTime()-onset)), -3+np.sin(3*(globalClock.getTime()-onset))/3]""imgL.pos = [-6-np.sin(3*(globalClock.getTime()-onset)), -3+np.sin(3*(globalClock.getTime()-onset))/3]","imgR.pos = [6+np.sin((globalClock.getTime()-onset)), -3+np.sin((globalClock.getTime()-onset))*3]""imgL.pos = [-6-np.sin((globalClock.getTime()-onset)), -3+np.sin((globalClock.getTime()-onset))*3]","imgR.pos = [6-np.sin((globalClock.getTime()-onset)), -4]""imgL.pos = [-6-np.sin((globalClock.getTime()-onset)), -4]","imgR.pos = [6-np.sin(4*(globalClock.getTime()-onset)), -4]""imgL.pos = [-6-np.sin(4*(globalClock.getTime()-onset)), -4]","imgR.pos = [6-np.sin(3*(globalClock.getTime()-onset)), -4]""imgL.pos = [-6-np.sin(3*(globalClock.getTime()-onset)), -4]","imgR.pos = [6-np.sin((globalClock.getTime()-onset)),-4]""imgL.pos = [-6-np.sin((globalClock.getTime()-onset)),-4]",